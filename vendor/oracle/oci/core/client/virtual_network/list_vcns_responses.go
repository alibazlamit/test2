package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVcnsReader is a Reader for the ListVcns structure.
type ListVcnsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVcnsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVcnsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListVcnsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVcnsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVcnsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVcnsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVcnsOK creates a ListVcnsOK with default headers values
func NewListVcnsOK() *ListVcnsOK {
	return &ListVcnsOK{}
}

/*ListVcnsOK handles this case with default header values.

The list is being retrieved.
*/
type ListVcnsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.Vcn
}

func (o *ListVcnsOK) Error() string {
	return fmt.Sprintf("[GET /vcns][%d] listVcnsOK  %+v", 200, o.Payload)
}

func (o *ListVcnsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVcnsUnauthorized creates a ListVcnsUnauthorized with default headers values
func NewListVcnsUnauthorized() *ListVcnsUnauthorized {
	return &ListVcnsUnauthorized{}
}

/*ListVcnsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVcnsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVcnsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /vcns][%d] listVcnsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVcnsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVcnsNotFound creates a ListVcnsNotFound with default headers values
func NewListVcnsNotFound() *ListVcnsNotFound {
	return &ListVcnsNotFound{}
}

/*ListVcnsNotFound handles this case with default header values.

Not Found
*/
type ListVcnsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVcnsNotFound) Error() string {
	return fmt.Sprintf("[GET /vcns][%d] listVcnsNotFound  %+v", 404, o.Payload)
}

func (o *ListVcnsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVcnsInternalServerError creates a ListVcnsInternalServerError with default headers values
func NewListVcnsInternalServerError() *ListVcnsInternalServerError {
	return &ListVcnsInternalServerError{}
}

/*ListVcnsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVcnsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVcnsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /vcns][%d] listVcnsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVcnsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVcnsDefault creates a ListVcnsDefault with default headers values
func NewListVcnsDefault(code int) *ListVcnsDefault {
	return &ListVcnsDefault{
		_statusCode: code,
	}
}

/*ListVcnsDefault handles this case with default header values.

An error has occurred.
*/
type ListVcnsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list vcns default response
func (o *ListVcnsDefault) Code() int {
	return o._statusCode
}

func (o *ListVcnsDefault) Error() string {
	return fmt.Sprintf("[GET /vcns][%d] ListVcns default  %+v", o._statusCode, o.Payload)
}

func (o *ListVcnsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
