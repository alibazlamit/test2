package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetDrgParams creates a new GetDrgParams object
// with the default values initialized.
func NewGetDrgParams() *GetDrgParams {
	var ()
	return &GetDrgParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetDrgParamsWithTimeout creates a new GetDrgParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetDrgParamsWithTimeout(timeout time.Duration) *GetDrgParams {
	var ()
	return &GetDrgParams{

		timeout: timeout,
	}
}

// NewGetDrgParamsWithContext creates a new GetDrgParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetDrgParamsWithContext(ctx context.Context) *GetDrgParams {
	var ()
	return &GetDrgParams{

		Context: ctx,
	}
}

// NewGetDrgParamsWithHTTPClient creates a new GetDrgParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetDrgParamsWithHTTPClient(client *http.Client) *GetDrgParams {
	var ()
	return &GetDrgParams{
		HTTPClient: client,
	}
}

/*GetDrgParams contains all the parameters to send to the API endpoint
for the get drg operation typically these are written to a http.Request
*/
type GetDrgParams struct {

	/*DrgID
	  The OCID of the DRG.

	*/
	DrgID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get drg params
func (o *GetDrgParams) WithTimeout(timeout time.Duration) *GetDrgParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get drg params
func (o *GetDrgParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get drg params
func (o *GetDrgParams) WithContext(ctx context.Context) *GetDrgParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get drg params
func (o *GetDrgParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get drg params
func (o *GetDrgParams) WithHTTPClient(client *http.Client) *GetDrgParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get drg params
func (o *GetDrgParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithDrgID adds the drgID to the get drg params
func (o *GetDrgParams) WithDrgID(drgID string) *GetDrgParams {
	o.SetDrgID(drgID)
	return o
}

// SetDrgID adds the drgId to the get drg params
func (o *GetDrgParams) SetDrgID(drgID string) {
	o.DrgID = drgID
}

// WriteToRequest writes these params to a swagger request
func (o *GetDrgParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param drgId
	if err := r.SetPathParam("drgId", o.DrgID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
