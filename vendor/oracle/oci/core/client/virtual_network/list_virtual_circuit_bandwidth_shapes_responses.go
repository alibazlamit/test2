package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVirtualCircuitBandwidthShapesReader is a Reader for the ListVirtualCircuitBandwidthShapes structure.
type ListVirtualCircuitBandwidthShapesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVirtualCircuitBandwidthShapesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVirtualCircuitBandwidthShapesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListVirtualCircuitBandwidthShapesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVirtualCircuitBandwidthShapesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVirtualCircuitBandwidthShapesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVirtualCircuitBandwidthShapesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVirtualCircuitBandwidthShapesOK creates a ListVirtualCircuitBandwidthShapesOK with default headers values
func NewListVirtualCircuitBandwidthShapesOK() *ListVirtualCircuitBandwidthShapesOK {
	return &ListVirtualCircuitBandwidthShapesOK{}
}

/*ListVirtualCircuitBandwidthShapesOK handles this case with default header values.

The list is being retrieved.
*/
type ListVirtualCircuitBandwidthShapesOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.VirtualCircuitBandwidthShape
}

func (o *ListVirtualCircuitBandwidthShapesOK) Error() string {
	return fmt.Sprintf("[GET /virtualCircuitBandwidthShapes][%d] listVirtualCircuitBandwidthShapesOK  %+v", 200, o.Payload)
}

func (o *ListVirtualCircuitBandwidthShapesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitBandwidthShapesUnauthorized creates a ListVirtualCircuitBandwidthShapesUnauthorized with default headers values
func NewListVirtualCircuitBandwidthShapesUnauthorized() *ListVirtualCircuitBandwidthShapesUnauthorized {
	return &ListVirtualCircuitBandwidthShapesUnauthorized{}
}

/*ListVirtualCircuitBandwidthShapesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVirtualCircuitBandwidthShapesUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitBandwidthShapesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /virtualCircuitBandwidthShapes][%d] listVirtualCircuitBandwidthShapesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVirtualCircuitBandwidthShapesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitBandwidthShapesNotFound creates a ListVirtualCircuitBandwidthShapesNotFound with default headers values
func NewListVirtualCircuitBandwidthShapesNotFound() *ListVirtualCircuitBandwidthShapesNotFound {
	return &ListVirtualCircuitBandwidthShapesNotFound{}
}

/*ListVirtualCircuitBandwidthShapesNotFound handles this case with default header values.

Not Found
*/
type ListVirtualCircuitBandwidthShapesNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitBandwidthShapesNotFound) Error() string {
	return fmt.Sprintf("[GET /virtualCircuitBandwidthShapes][%d] listVirtualCircuitBandwidthShapesNotFound  %+v", 404, o.Payload)
}

func (o *ListVirtualCircuitBandwidthShapesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitBandwidthShapesInternalServerError creates a ListVirtualCircuitBandwidthShapesInternalServerError with default headers values
func NewListVirtualCircuitBandwidthShapesInternalServerError() *ListVirtualCircuitBandwidthShapesInternalServerError {
	return &ListVirtualCircuitBandwidthShapesInternalServerError{}
}

/*ListVirtualCircuitBandwidthShapesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVirtualCircuitBandwidthShapesInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitBandwidthShapesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /virtualCircuitBandwidthShapes][%d] listVirtualCircuitBandwidthShapesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVirtualCircuitBandwidthShapesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitBandwidthShapesDefault creates a ListVirtualCircuitBandwidthShapesDefault with default headers values
func NewListVirtualCircuitBandwidthShapesDefault(code int) *ListVirtualCircuitBandwidthShapesDefault {
	return &ListVirtualCircuitBandwidthShapesDefault{
		_statusCode: code,
	}
}

/*ListVirtualCircuitBandwidthShapesDefault handles this case with default header values.

An error has occurred.
*/
type ListVirtualCircuitBandwidthShapesDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list virtual circuit bandwidth shapes default response
func (o *ListVirtualCircuitBandwidthShapesDefault) Code() int {
	return o._statusCode
}

func (o *ListVirtualCircuitBandwidthShapesDefault) Error() string {
	return fmt.Sprintf("[GET /virtualCircuitBandwidthShapes][%d] ListVirtualCircuitBandwidthShapes default  %+v", o._statusCode, o.Payload)
}

func (o *ListVirtualCircuitBandwidthShapesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
