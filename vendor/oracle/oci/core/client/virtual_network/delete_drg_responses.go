package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// DeleteDrgReader is a Reader for the DeleteDrg structure.
type DeleteDrgReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDrgReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteDrgNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteDrgUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDrgNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteDrgInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteDrgDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDrgNoContent creates a DeleteDrgNoContent with default headers values
func NewDeleteDrgNoContent() *DeleteDrgNoContent {
	return &DeleteDrgNoContent{}
}

/*DeleteDrgNoContent handles this case with default header values.

The DRG is being deleted.
*/
type DeleteDrgNoContent struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string
}

func (o *DeleteDrgNoContent) Error() string {
	return fmt.Sprintf("[DELETE /drgs/{drgId}][%d] deleteDrgNoContent ", 204)
}

func (o *DeleteDrgNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	return nil
}

// NewDeleteDrgUnauthorized creates a DeleteDrgUnauthorized with default headers values
func NewDeleteDrgUnauthorized() *DeleteDrgUnauthorized {
	return &DeleteDrgUnauthorized{}
}

/*DeleteDrgUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDrgUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /drgs/{drgId}][%d] deleteDrgUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteDrgUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgNotFound creates a DeleteDrgNotFound with default headers values
func NewDeleteDrgNotFound() *DeleteDrgNotFound {
	return &DeleteDrgNotFound{}
}

/*DeleteDrgNotFound handles this case with default header values.

Not Found
*/
type DeleteDrgNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgNotFound) Error() string {
	return fmt.Sprintf("[DELETE /drgs/{drgId}][%d] deleteDrgNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDrgNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgInternalServerError creates a DeleteDrgInternalServerError with default headers values
func NewDeleteDrgInternalServerError() *DeleteDrgInternalServerError {
	return &DeleteDrgInternalServerError{}
}

/*DeleteDrgInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteDrgInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /drgs/{drgId}][%d] deleteDrgInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDrgInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgDefault creates a DeleteDrgDefault with default headers values
func NewDeleteDrgDefault(code int) *DeleteDrgDefault {
	return &DeleteDrgDefault{
		_statusCode: code,
	}
}

/*DeleteDrgDefault handles this case with default header values.

An error has occurred.
*/
type DeleteDrgDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the delete drg default response
func (o *DeleteDrgDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDrgDefault) Error() string {
	return fmt.Sprintf("[DELETE /drgs/{drgId}][%d] DeleteDrg default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDrgDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
