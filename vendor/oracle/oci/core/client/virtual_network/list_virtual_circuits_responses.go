package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVirtualCircuitsReader is a Reader for the ListVirtualCircuits structure.
type ListVirtualCircuitsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVirtualCircuitsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVirtualCircuitsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVirtualCircuitsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVirtualCircuitsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVirtualCircuitsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVirtualCircuitsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVirtualCircuitsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVirtualCircuitsOK creates a ListVirtualCircuitsOK with default headers values
func NewListVirtualCircuitsOK() *ListVirtualCircuitsOK {
	return &ListVirtualCircuitsOK{}
}

/*ListVirtualCircuitsOK handles this case with default header values.

The list is being retrieved.
*/
type ListVirtualCircuitsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.VirtualCircuit
}

func (o *ListVirtualCircuitsOK) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] listVirtualCircuitsOK  %+v", 200, o.Payload)
}

func (o *ListVirtualCircuitsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitsBadRequest creates a ListVirtualCircuitsBadRequest with default headers values
func NewListVirtualCircuitsBadRequest() *ListVirtualCircuitsBadRequest {
	return &ListVirtualCircuitsBadRequest{}
}

/*ListVirtualCircuitsBadRequest handles this case with default header values.

Bad Request
*/
type ListVirtualCircuitsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitsBadRequest) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] listVirtualCircuitsBadRequest  %+v", 400, o.Payload)
}

func (o *ListVirtualCircuitsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitsUnauthorized creates a ListVirtualCircuitsUnauthorized with default headers values
func NewListVirtualCircuitsUnauthorized() *ListVirtualCircuitsUnauthorized {
	return &ListVirtualCircuitsUnauthorized{}
}

/*ListVirtualCircuitsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVirtualCircuitsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] listVirtualCircuitsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVirtualCircuitsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitsNotFound creates a ListVirtualCircuitsNotFound with default headers values
func NewListVirtualCircuitsNotFound() *ListVirtualCircuitsNotFound {
	return &ListVirtualCircuitsNotFound{}
}

/*ListVirtualCircuitsNotFound handles this case with default header values.

Not Found
*/
type ListVirtualCircuitsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitsNotFound) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] listVirtualCircuitsNotFound  %+v", 404, o.Payload)
}

func (o *ListVirtualCircuitsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitsInternalServerError creates a ListVirtualCircuitsInternalServerError with default headers values
func NewListVirtualCircuitsInternalServerError() *ListVirtualCircuitsInternalServerError {
	return &ListVirtualCircuitsInternalServerError{}
}

/*ListVirtualCircuitsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVirtualCircuitsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVirtualCircuitsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] listVirtualCircuitsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVirtualCircuitsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVirtualCircuitsDefault creates a ListVirtualCircuitsDefault with default headers values
func NewListVirtualCircuitsDefault(code int) *ListVirtualCircuitsDefault {
	return &ListVirtualCircuitsDefault{
		_statusCode: code,
	}
}

/*ListVirtualCircuitsDefault handles this case with default header values.

An error has occurred.
*/
type ListVirtualCircuitsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list virtual circuits default response
func (o *ListVirtualCircuitsDefault) Code() int {
	return o._statusCode
}

func (o *ListVirtualCircuitsDefault) Error() string {
	return fmt.Sprintf("[GET /virtualCircuits][%d] ListVirtualCircuits default  %+v", o._statusCode, o.Payload)
}

func (o *ListVirtualCircuitsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
