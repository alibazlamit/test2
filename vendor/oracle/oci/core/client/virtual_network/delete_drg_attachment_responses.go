package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// DeleteDrgAttachmentReader is a Reader for the DeleteDrgAttachment structure.
type DeleteDrgAttachmentReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteDrgAttachmentReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteDrgAttachmentNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewDeleteDrgAttachmentUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteDrgAttachmentNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 412:
		result := NewDeleteDrgAttachmentPreconditionFailed()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewDeleteDrgAttachmentInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewDeleteDrgAttachmentDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewDeleteDrgAttachmentNoContent creates a DeleteDrgAttachmentNoContent with default headers values
func NewDeleteDrgAttachmentNoContent() *DeleteDrgAttachmentNoContent {
	return &DeleteDrgAttachmentNoContent{}
}

/*DeleteDrgAttachmentNoContent handles this case with default header values.

The DRG is being detached.
*/
type DeleteDrgAttachmentNoContent struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string
}

func (o *DeleteDrgAttachmentNoContent) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] deleteDrgAttachmentNoContent ", 204)
}

func (o *DeleteDrgAttachmentNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	return nil
}

// NewDeleteDrgAttachmentUnauthorized creates a DeleteDrgAttachmentUnauthorized with default headers values
func NewDeleteDrgAttachmentUnauthorized() *DeleteDrgAttachmentUnauthorized {
	return &DeleteDrgAttachmentUnauthorized{}
}

/*DeleteDrgAttachmentUnauthorized handles this case with default header values.

Unauthorized
*/
type DeleteDrgAttachmentUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgAttachmentUnauthorized) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] deleteDrgAttachmentUnauthorized  %+v", 401, o.Payload)
}

func (o *DeleteDrgAttachmentUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgAttachmentNotFound creates a DeleteDrgAttachmentNotFound with default headers values
func NewDeleteDrgAttachmentNotFound() *DeleteDrgAttachmentNotFound {
	return &DeleteDrgAttachmentNotFound{}
}

/*DeleteDrgAttachmentNotFound handles this case with default header values.

Not Found
*/
type DeleteDrgAttachmentNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgAttachmentNotFound) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] deleteDrgAttachmentNotFound  %+v", 404, o.Payload)
}

func (o *DeleteDrgAttachmentNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgAttachmentPreconditionFailed creates a DeleteDrgAttachmentPreconditionFailed with default headers values
func NewDeleteDrgAttachmentPreconditionFailed() *DeleteDrgAttachmentPreconditionFailed {
	return &DeleteDrgAttachmentPreconditionFailed{}
}

/*DeleteDrgAttachmentPreconditionFailed handles this case with default header values.

Precondition Failed
*/
type DeleteDrgAttachmentPreconditionFailed struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgAttachmentPreconditionFailed) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] deleteDrgAttachmentPreconditionFailed  %+v", 412, o.Payload)
}

func (o *DeleteDrgAttachmentPreconditionFailed) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgAttachmentInternalServerError creates a DeleteDrgAttachmentInternalServerError with default headers values
func NewDeleteDrgAttachmentInternalServerError() *DeleteDrgAttachmentInternalServerError {
	return &DeleteDrgAttachmentInternalServerError{}
}

/*DeleteDrgAttachmentInternalServerError handles this case with default header values.

Internal Server Error
*/
type DeleteDrgAttachmentInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *DeleteDrgAttachmentInternalServerError) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] deleteDrgAttachmentInternalServerError  %+v", 500, o.Payload)
}

func (o *DeleteDrgAttachmentInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDeleteDrgAttachmentDefault creates a DeleteDrgAttachmentDefault with default headers values
func NewDeleteDrgAttachmentDefault(code int) *DeleteDrgAttachmentDefault {
	return &DeleteDrgAttachmentDefault{
		_statusCode: code,
	}
}

/*DeleteDrgAttachmentDefault handles this case with default header values.

An error has occurred.
*/
type DeleteDrgAttachmentDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the delete drg attachment default response
func (o *DeleteDrgAttachmentDefault) Code() int {
	return o._statusCode
}

func (o *DeleteDrgAttachmentDefault) Error() string {
	return fmt.Sprintf("[DELETE /drgAttachments/{drgAttachmentId}][%d] DeleteDrgAttachment default  %+v", o._statusCode, o.Payload)
}

func (o *DeleteDrgAttachmentDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
