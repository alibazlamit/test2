package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetSecurityListParams creates a new GetSecurityListParams object
// with the default values initialized.
func NewGetSecurityListParams() *GetSecurityListParams {
	var ()
	return &GetSecurityListParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetSecurityListParamsWithTimeout creates a new GetSecurityListParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetSecurityListParamsWithTimeout(timeout time.Duration) *GetSecurityListParams {
	var ()
	return &GetSecurityListParams{

		timeout: timeout,
	}
}

// NewGetSecurityListParamsWithContext creates a new GetSecurityListParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetSecurityListParamsWithContext(ctx context.Context) *GetSecurityListParams {
	var ()
	return &GetSecurityListParams{

		Context: ctx,
	}
}

// NewGetSecurityListParamsWithHTTPClient creates a new GetSecurityListParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetSecurityListParamsWithHTTPClient(client *http.Client) *GetSecurityListParams {
	var ()
	return &GetSecurityListParams{
		HTTPClient: client,
	}
}

/*GetSecurityListParams contains all the parameters to send to the API endpoint
for the get security list operation typically these are written to a http.Request
*/
type GetSecurityListParams struct {

	/*SecurityListID
	  The OCID of the security list.

	*/
	SecurityListID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get security list params
func (o *GetSecurityListParams) WithTimeout(timeout time.Duration) *GetSecurityListParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get security list params
func (o *GetSecurityListParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get security list params
func (o *GetSecurityListParams) WithContext(ctx context.Context) *GetSecurityListParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get security list params
func (o *GetSecurityListParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get security list params
func (o *GetSecurityListParams) WithHTTPClient(client *http.Client) *GetSecurityListParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get security list params
func (o *GetSecurityListParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithSecurityListID adds the securityListID to the get security list params
func (o *GetSecurityListParams) WithSecurityListID(securityListID string) *GetSecurityListParams {
	o.SetSecurityListID(securityListID)
	return o
}

// SetSecurityListID adds the securityListId to the get security list params
func (o *GetSecurityListParams) SetSecurityListID(securityListID string) {
	o.SecurityListID = securityListID
}

// WriteToRequest writes these params to a swagger request
func (o *GetSecurityListParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param securityListId
	if err := r.SetPathParam("securityListId", o.SecurityListID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
