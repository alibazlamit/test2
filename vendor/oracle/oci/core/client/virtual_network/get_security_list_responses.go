package virtual_network

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// GetSecurityListReader is a Reader for the GetSecurityList structure.
type GetSecurityListReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecurityListReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSecurityListOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewGetSecurityListUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSecurityListNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetSecurityListInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetSecurityListDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetSecurityListOK creates a GetSecurityListOK with default headers values
func NewGetSecurityListOK() *GetSecurityListOK {
	return &GetSecurityListOK{}
}

/*GetSecurityListOK handles this case with default header values.

The security list was retrieved.
*/
type GetSecurityListOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.SecurityList
}

func (o *GetSecurityListOK) Error() string {
	return fmt.Sprintf("[GET /securityLists/{securityListId}][%d] getSecurityListOK  %+v", 200, o.Payload)
}

func (o *GetSecurityListOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.SecurityList)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityListUnauthorized creates a GetSecurityListUnauthorized with default headers values
func NewGetSecurityListUnauthorized() *GetSecurityListUnauthorized {
	return &GetSecurityListUnauthorized{}
}

/*GetSecurityListUnauthorized handles this case with default header values.

Unauthorized
*/
type GetSecurityListUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetSecurityListUnauthorized) Error() string {
	return fmt.Sprintf("[GET /securityLists/{securityListId}][%d] getSecurityListUnauthorized  %+v", 401, o.Payload)
}

func (o *GetSecurityListUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityListNotFound creates a GetSecurityListNotFound with default headers values
func NewGetSecurityListNotFound() *GetSecurityListNotFound {
	return &GetSecurityListNotFound{}
}

/*GetSecurityListNotFound handles this case with default header values.

Not Found
*/
type GetSecurityListNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetSecurityListNotFound) Error() string {
	return fmt.Sprintf("[GET /securityLists/{securityListId}][%d] getSecurityListNotFound  %+v", 404, o.Payload)
}

func (o *GetSecurityListNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityListInternalServerError creates a GetSecurityListInternalServerError with default headers values
func NewGetSecurityListInternalServerError() *GetSecurityListInternalServerError {
	return &GetSecurityListInternalServerError{}
}

/*GetSecurityListInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetSecurityListInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetSecurityListInternalServerError) Error() string {
	return fmt.Sprintf("[GET /securityLists/{securityListId}][%d] getSecurityListInternalServerError  %+v", 500, o.Payload)
}

func (o *GetSecurityListInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecurityListDefault creates a GetSecurityListDefault with default headers values
func NewGetSecurityListDefault(code int) *GetSecurityListDefault {
	return &GetSecurityListDefault{
		_statusCode: code,
	}
}

/*GetSecurityListDefault handles this case with default header values.

An error has occurred.
*/
type GetSecurityListDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get security list default response
func (o *GetSecurityListDefault) Code() int {
	return o._statusCode
}

func (o *GetSecurityListDefault) Error() string {
	return fmt.Sprintf("[GET /securityLists/{securityListId}][%d] GetSecurityList default  %+v", o._statusCode, o.Payload)
}

func (o *GetSecurityListDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
