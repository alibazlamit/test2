package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVolumeBackupsReader is a Reader for the ListVolumeBackups structure.
type ListVolumeBackupsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVolumeBackupsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVolumeBackupsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVolumeBackupsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVolumeBackupsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVolumeBackupsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVolumeBackupsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVolumeBackupsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVolumeBackupsOK creates a ListVolumeBackupsOK with default headers values
func NewListVolumeBackupsOK() *ListVolumeBackupsOK {
	return &ListVolumeBackupsOK{}
}

/*ListVolumeBackupsOK handles this case with default header values.

The list is being retrieved.
*/
type ListVolumeBackupsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.VolumeBackup
}

func (o *ListVolumeBackupsOK) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] listVolumeBackupsOK  %+v", 200, o.Payload)
}

func (o *ListVolumeBackupsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupsBadRequest creates a ListVolumeBackupsBadRequest with default headers values
func NewListVolumeBackupsBadRequest() *ListVolumeBackupsBadRequest {
	return &ListVolumeBackupsBadRequest{}
}

/*ListVolumeBackupsBadRequest handles this case with default header values.

Bad Request
*/
type ListVolumeBackupsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupsBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] listVolumeBackupsBadRequest  %+v", 400, o.Payload)
}

func (o *ListVolumeBackupsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupsUnauthorized creates a ListVolumeBackupsUnauthorized with default headers values
func NewListVolumeBackupsUnauthorized() *ListVolumeBackupsUnauthorized {
	return &ListVolumeBackupsUnauthorized{}
}

/*ListVolumeBackupsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVolumeBackupsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] listVolumeBackupsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVolumeBackupsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupsNotFound creates a ListVolumeBackupsNotFound with default headers values
func NewListVolumeBackupsNotFound() *ListVolumeBackupsNotFound {
	return &ListVolumeBackupsNotFound{}
}

/*ListVolumeBackupsNotFound handles this case with default header values.

Not Found
*/
type ListVolumeBackupsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupsNotFound) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] listVolumeBackupsNotFound  %+v", 404, o.Payload)
}

func (o *ListVolumeBackupsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupsInternalServerError creates a ListVolumeBackupsInternalServerError with default headers values
func NewListVolumeBackupsInternalServerError() *ListVolumeBackupsInternalServerError {
	return &ListVolumeBackupsInternalServerError{}
}

/*ListVolumeBackupsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVolumeBackupsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeBackupsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] listVolumeBackupsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVolumeBackupsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeBackupsDefault creates a ListVolumeBackupsDefault with default headers values
func NewListVolumeBackupsDefault(code int) *ListVolumeBackupsDefault {
	return &ListVolumeBackupsDefault{
		_statusCode: code,
	}
}

/*ListVolumeBackupsDefault handles this case with default header values.

An error has occurred.
*/
type ListVolumeBackupsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list volume backups default response
func (o *ListVolumeBackupsDefault) Code() int {
	return o._statusCode
}

func (o *ListVolumeBackupsDefault) Error() string {
	return fmt.Sprintf("[GET /volumeBackups][%d] ListVolumeBackups default  %+v", o._statusCode, o.Payload)
}

func (o *ListVolumeBackupsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
