package blockstorage

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVolumesReader is a Reader for the ListVolumes structure.
type ListVolumesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVolumesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVolumesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVolumesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVolumesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVolumesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVolumesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVolumesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVolumesOK creates a ListVolumesOK with default headers values
func NewListVolumesOK() *ListVolumesOK {
	return &ListVolumesOK{}
}

/*ListVolumesOK handles this case with default header values.

The list is being retrieved.
*/
type ListVolumesOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.Volume
}

func (o *ListVolumesOK) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] listVolumesOK  %+v", 200, o.Payload)
}

func (o *ListVolumesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumesBadRequest creates a ListVolumesBadRequest with default headers values
func NewListVolumesBadRequest() *ListVolumesBadRequest {
	return &ListVolumesBadRequest{}
}

/*ListVolumesBadRequest handles this case with default header values.

Bad Request
*/
type ListVolumesBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumesBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] listVolumesBadRequest  %+v", 400, o.Payload)
}

func (o *ListVolumesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumesUnauthorized creates a ListVolumesUnauthorized with default headers values
func NewListVolumesUnauthorized() *ListVolumesUnauthorized {
	return &ListVolumesUnauthorized{}
}

/*ListVolumesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVolumesUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] listVolumesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVolumesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumesNotFound creates a ListVolumesNotFound with default headers values
func NewListVolumesNotFound() *ListVolumesNotFound {
	return &ListVolumesNotFound{}
}

/*ListVolumesNotFound handles this case with default header values.

Not Found
*/
type ListVolumesNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumesNotFound) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] listVolumesNotFound  %+v", 404, o.Payload)
}

func (o *ListVolumesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumesInternalServerError creates a ListVolumesInternalServerError with default headers values
func NewListVolumesInternalServerError() *ListVolumesInternalServerError {
	return &ListVolumesInternalServerError{}
}

/*ListVolumesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVolumesInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] listVolumesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVolumesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumesDefault creates a ListVolumesDefault with default headers values
func NewListVolumesDefault(code int) *ListVolumesDefault {
	return &ListVolumesDefault{
		_statusCode: code,
	}
}

/*ListVolumesDefault handles this case with default header values.

An error has occurred.
*/
type ListVolumesDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list volumes default response
func (o *ListVolumesDefault) Code() int {
	return o._statusCode
}

func (o *ListVolumesDefault) Error() string {
	return fmt.Sprintf("[GET /volumes][%d] ListVolumes default  %+v", o._statusCode, o.Payload)
}

func (o *ListVolumesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
