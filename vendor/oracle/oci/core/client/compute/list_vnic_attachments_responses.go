package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVnicAttachmentsReader is a Reader for the ListVnicAttachments structure.
type ListVnicAttachmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVnicAttachmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVnicAttachmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVnicAttachmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVnicAttachmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVnicAttachmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVnicAttachmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVnicAttachmentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVnicAttachmentsOK creates a ListVnicAttachmentsOK with default headers values
func NewListVnicAttachmentsOK() *ListVnicAttachmentsOK {
	return &ListVnicAttachmentsOK{}
}

/*ListVnicAttachmentsOK handles this case with default header values.

The list is being retrieved.
*/
type ListVnicAttachmentsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.VnicAttachment
}

func (o *ListVnicAttachmentsOK) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] listVnicAttachmentsOK  %+v", 200, o.Payload)
}

func (o *ListVnicAttachmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVnicAttachmentsBadRequest creates a ListVnicAttachmentsBadRequest with default headers values
func NewListVnicAttachmentsBadRequest() *ListVnicAttachmentsBadRequest {
	return &ListVnicAttachmentsBadRequest{}
}

/*ListVnicAttachmentsBadRequest handles this case with default header values.

Bad Request
*/
type ListVnicAttachmentsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVnicAttachmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] listVnicAttachmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListVnicAttachmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVnicAttachmentsUnauthorized creates a ListVnicAttachmentsUnauthorized with default headers values
func NewListVnicAttachmentsUnauthorized() *ListVnicAttachmentsUnauthorized {
	return &ListVnicAttachmentsUnauthorized{}
}

/*ListVnicAttachmentsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVnicAttachmentsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVnicAttachmentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] listVnicAttachmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVnicAttachmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVnicAttachmentsNotFound creates a ListVnicAttachmentsNotFound with default headers values
func NewListVnicAttachmentsNotFound() *ListVnicAttachmentsNotFound {
	return &ListVnicAttachmentsNotFound{}
}

/*ListVnicAttachmentsNotFound handles this case with default header values.

Not Found
*/
type ListVnicAttachmentsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVnicAttachmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] listVnicAttachmentsNotFound  %+v", 404, o.Payload)
}

func (o *ListVnicAttachmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVnicAttachmentsInternalServerError creates a ListVnicAttachmentsInternalServerError with default headers values
func NewListVnicAttachmentsInternalServerError() *ListVnicAttachmentsInternalServerError {
	return &ListVnicAttachmentsInternalServerError{}
}

/*ListVnicAttachmentsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVnicAttachmentsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVnicAttachmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] listVnicAttachmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVnicAttachmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVnicAttachmentsDefault creates a ListVnicAttachmentsDefault with default headers values
func NewListVnicAttachmentsDefault(code int) *ListVnicAttachmentsDefault {
	return &ListVnicAttachmentsDefault{
		_statusCode: code,
	}
}

/*ListVnicAttachmentsDefault handles this case with default header values.

An error has occurred.
*/
type ListVnicAttachmentsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list vnic attachments default response
func (o *ListVnicAttachmentsDefault) Code() int {
	return o._statusCode
}

func (o *ListVnicAttachmentsDefault) Error() string {
	return fmt.Sprintf("[GET /vnicAttachments/][%d] ListVnicAttachments default  %+v", o._statusCode, o.Payload)
}

func (o *ListVnicAttachmentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
