package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListInstancesReader is a Reader for the ListInstances structure.
type ListInstancesReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListInstancesReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListInstancesOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListInstancesBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListInstancesUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListInstancesNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListInstancesInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListInstancesDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListInstancesOK creates a ListInstancesOK with default headers values
func NewListInstancesOK() *ListInstancesOK {
	return &ListInstancesOK{}
}

/*ListInstancesOK handles this case with default header values.

The list is being retrieved.
*/
type ListInstancesOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.Instance
}

func (o *ListInstancesOK) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] listInstancesOK  %+v", 200, o.Payload)
}

func (o *ListInstancesOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesBadRequest creates a ListInstancesBadRequest with default headers values
func NewListInstancesBadRequest() *ListInstancesBadRequest {
	return &ListInstancesBadRequest{}
}

/*ListInstancesBadRequest handles this case with default header values.

Bad Request
*/
type ListInstancesBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListInstancesBadRequest) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] listInstancesBadRequest  %+v", 400, o.Payload)
}

func (o *ListInstancesBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesUnauthorized creates a ListInstancesUnauthorized with default headers values
func NewListInstancesUnauthorized() *ListInstancesUnauthorized {
	return &ListInstancesUnauthorized{}
}

/*ListInstancesUnauthorized handles this case with default header values.

Unauthorized
*/
type ListInstancesUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListInstancesUnauthorized) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] listInstancesUnauthorized  %+v", 401, o.Payload)
}

func (o *ListInstancesUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesNotFound creates a ListInstancesNotFound with default headers values
func NewListInstancesNotFound() *ListInstancesNotFound {
	return &ListInstancesNotFound{}
}

/*ListInstancesNotFound handles this case with default header values.

Not Found
*/
type ListInstancesNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListInstancesNotFound) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] listInstancesNotFound  %+v", 404, o.Payload)
}

func (o *ListInstancesNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesInternalServerError creates a ListInstancesInternalServerError with default headers values
func NewListInstancesInternalServerError() *ListInstancesInternalServerError {
	return &ListInstancesInternalServerError{}
}

/*ListInstancesInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListInstancesInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListInstancesInternalServerError) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] listInstancesInternalServerError  %+v", 500, o.Payload)
}

func (o *ListInstancesInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListInstancesDefault creates a ListInstancesDefault with default headers values
func NewListInstancesDefault(code int) *ListInstancesDefault {
	return &ListInstancesDefault{
		_statusCode: code,
	}
}

/*ListInstancesDefault handles this case with default header values.

An error has occurred.
*/
type ListInstancesDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list instances default response
func (o *ListInstancesDefault) Code() int {
	return o._statusCode
}

func (o *ListInstancesDefault) Error() string {
	return fmt.Sprintf("[GET /instances/][%d] ListInstances default  %+v", o._statusCode, o.Payload)
}

func (o *ListInstancesDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
