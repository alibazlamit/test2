package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/core/models"
)

// ListVolumeAttachmentsReader is a Reader for the ListVolumeAttachments structure.
type ListVolumeAttachmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListVolumeAttachmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListVolumeAttachmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListVolumeAttachmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListVolumeAttachmentsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListVolumeAttachmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListVolumeAttachmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListVolumeAttachmentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListVolumeAttachmentsOK creates a ListVolumeAttachmentsOK with default headers values
func NewListVolumeAttachmentsOK() *ListVolumeAttachmentsOK {
	return &ListVolumeAttachmentsOK{}
}

/*ListVolumeAttachmentsOK handles this case with default header values.

The list is being retrieved.
*/
type ListVolumeAttachmentsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []models.VolumeAttachment
}

func (o *ListVolumeAttachmentsOK) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] listVolumeAttachmentsOK  %+v", 200, o.Payload)
}

func (o *ListVolumeAttachmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload as interface type
	payload, err := models.UnmarshalVolumeAttachmentSlice(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewListVolumeAttachmentsBadRequest creates a ListVolumeAttachmentsBadRequest with default headers values
func NewListVolumeAttachmentsBadRequest() *ListVolumeAttachmentsBadRequest {
	return &ListVolumeAttachmentsBadRequest{}
}

/*ListVolumeAttachmentsBadRequest handles this case with default header values.

Bad Request
*/
type ListVolumeAttachmentsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeAttachmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] listVolumeAttachmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListVolumeAttachmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeAttachmentsUnauthorized creates a ListVolumeAttachmentsUnauthorized with default headers values
func NewListVolumeAttachmentsUnauthorized() *ListVolumeAttachmentsUnauthorized {
	return &ListVolumeAttachmentsUnauthorized{}
}

/*ListVolumeAttachmentsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListVolumeAttachmentsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeAttachmentsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] listVolumeAttachmentsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListVolumeAttachmentsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeAttachmentsNotFound creates a ListVolumeAttachmentsNotFound with default headers values
func NewListVolumeAttachmentsNotFound() *ListVolumeAttachmentsNotFound {
	return &ListVolumeAttachmentsNotFound{}
}

/*ListVolumeAttachmentsNotFound handles this case with default header values.

Not Found
*/
type ListVolumeAttachmentsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeAttachmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] listVolumeAttachmentsNotFound  %+v", 404, o.Payload)
}

func (o *ListVolumeAttachmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeAttachmentsInternalServerError creates a ListVolumeAttachmentsInternalServerError with default headers values
func NewListVolumeAttachmentsInternalServerError() *ListVolumeAttachmentsInternalServerError {
	return &ListVolumeAttachmentsInternalServerError{}
}

/*ListVolumeAttachmentsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListVolumeAttachmentsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListVolumeAttachmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] listVolumeAttachmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListVolumeAttachmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListVolumeAttachmentsDefault creates a ListVolumeAttachmentsDefault with default headers values
func NewListVolumeAttachmentsDefault(code int) *ListVolumeAttachmentsDefault {
	return &ListVolumeAttachmentsDefault{
		_statusCode: code,
	}
}

/*ListVolumeAttachmentsDefault handles this case with default header values.

An error has occurred.
*/
type ListVolumeAttachmentsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about
	a particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list volume attachments default response
func (o *ListVolumeAttachmentsDefault) Code() int {
	return o._statusCode
}

func (o *ListVolumeAttachmentsDefault) Error() string {
	return fmt.Sprintf("[GET /volumeAttachments/][%d] ListVolumeAttachments default  %+v", o._statusCode, o.Payload)
}

func (o *ListVolumeAttachmentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
