package compute

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetWindowsInstanceInitialCredentialsParams creates a new GetWindowsInstanceInitialCredentialsParams object
// with the default values initialized.
func NewGetWindowsInstanceInitialCredentialsParams() *GetWindowsInstanceInitialCredentialsParams {
	var ()
	return &GetWindowsInstanceInitialCredentialsParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetWindowsInstanceInitialCredentialsParamsWithTimeout creates a new GetWindowsInstanceInitialCredentialsParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetWindowsInstanceInitialCredentialsParamsWithTimeout(timeout time.Duration) *GetWindowsInstanceInitialCredentialsParams {
	var ()
	return &GetWindowsInstanceInitialCredentialsParams{

		timeout: timeout,
	}
}

// NewGetWindowsInstanceInitialCredentialsParamsWithContext creates a new GetWindowsInstanceInitialCredentialsParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetWindowsInstanceInitialCredentialsParamsWithContext(ctx context.Context) *GetWindowsInstanceInitialCredentialsParams {
	var ()
	return &GetWindowsInstanceInitialCredentialsParams{

		Context: ctx,
	}
}

// NewGetWindowsInstanceInitialCredentialsParamsWithHTTPClient creates a new GetWindowsInstanceInitialCredentialsParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetWindowsInstanceInitialCredentialsParamsWithHTTPClient(client *http.Client) *GetWindowsInstanceInitialCredentialsParams {
	var ()
	return &GetWindowsInstanceInitialCredentialsParams{
		HTTPClient: client,
	}
}

/*GetWindowsInstanceInitialCredentialsParams contains all the parameters to send to the API endpoint
for the get windows instance initial credentials operation typically these are written to a http.Request
*/
type GetWindowsInstanceInitialCredentialsParams struct {

	/*InstanceID
	  The OCID of the instance.

	*/
	InstanceID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) WithTimeout(timeout time.Duration) *GetWindowsInstanceInitialCredentialsParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) WithContext(ctx context.Context) *GetWindowsInstanceInitialCredentialsParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) WithHTTPClient(client *http.Client) *GetWindowsInstanceInitialCredentialsParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithInstanceID adds the instanceID to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) WithInstanceID(instanceID string) *GetWindowsInstanceInitialCredentialsParams {
	o.SetInstanceID(instanceID)
	return o
}

// SetInstanceID adds the instanceId to the get windows instance initial credentials params
func (o *GetWindowsInstanceInitialCredentialsParams) SetInstanceID(instanceID string) {
	o.InstanceID = instanceID
}

// WriteToRequest writes these params to a swagger request
func (o *GetWindowsInstanceInitialCredentialsParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param instanceId
	if err := r.SetPathParam("instanceId", o.InstanceID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
