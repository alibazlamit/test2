package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"bytes"
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
)

// ExportImageViaObjectStorageTupleDetails export image via object storage tuple details
// swagger:model ExportImageViaObjectStorageTupleDetails
type ExportImageViaObjectStorageTupleDetails struct {

	// The Object Storage Service bucket to export the image to.
	BucketName string `json:"bucketName,omitempty"`

	// The Object Storage Service namespace to export the image to.
	NamespaceName string `json:"namespaceName,omitempty"`

	// The Object Storage Service object name for the exported image.
	ObjectName string `json:"objectName,omitempty"`
}

func (m *ExportImageViaObjectStorageTupleDetails) DestinationType() string {
	return DiscriminatorTypeValues["ExportImageViaObjectStorageTupleDetails"]
}
func (m *ExportImageViaObjectStorageTupleDetails) SetDestinationType(val string) {

}

// UnmarshalJSON unmarshals this polymorphic type from a JSON structure
func (m *ExportImageViaObjectStorageTupleDetails) UnmarshalJSON(raw []byte) error {
	var data struct {
		DestinationType string `json:"destinationType"`

		// The Object Storage Service bucket to export the image to.
		BucketName string `json:"bucketName,omitempty"`

		// The Object Storage Service namespace to export the image to.
		NamespaceName string `json:"namespaceName,omitempty"`

		// The Object Storage Service object name for the exported image.
		ObjectName string `json:"objectName,omitempty"`
	}

	buf := bytes.NewBuffer(raw)
	dec := json.NewDecoder(buf)
	dec.UseNumber()

	if err := dec.Decode(&data); err != nil {
		return err
	}

	m.BucketName = data.BucketName
	m.NamespaceName = data.NamespaceName
	m.ObjectName = data.ObjectName

	return nil
}

// MarshalJSON marshals this polymorphic type to a JSON structure
func (m ExportImageViaObjectStorageTupleDetails) MarshalJSON() ([]byte, error) {
	var data struct {
		DestinationType string `json:"destinationType"`

		// The Object Storage Service bucket to export the image to.
		BucketName string `json:"bucketName,omitempty"`

		// The Object Storage Service namespace to export the image to.
		NamespaceName string `json:"namespaceName,omitempty"`

		// The Object Storage Service object name for the exported image.
		ObjectName string `json:"objectName,omitempty"`
	}

	data.BucketName = m.BucketName
	data.NamespaceName = m.NamespaceName
	data.ObjectName = m.ObjectName
	data.DestinationType = DiscriminatorTypeValues["ExportImageViaObjectStorageTupleDetails"]
	return json.Marshal(data)
}

// Validate validates this export image via object storage tuple details
func (m *ExportImageViaObjectStorageTupleDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
