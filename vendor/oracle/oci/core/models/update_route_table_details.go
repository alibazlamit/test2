package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"strconv"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// UpdateRouteTableDetails update route table details
// swagger:model UpdateRouteTableDetails
type UpdateRouteTableDetails struct {

	// A user-friendly name. Does not have to be unique, and it's changeable.
	// Avoid entering confidential information.
	//
	// Max Length: 255
	// Min Length: 1
	DisplayName string `json:"displayName,omitempty"`

	// The collection of rules used for routing destination IPs to network devices.
	RouteRules []*RouteRule `json:"routeRules"`
}

// Validate validates this update route table details
func (m *UpdateRouteTableDetails) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayName(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if err := m.validateRouteRules(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *UpdateRouteTableDetails) validateDisplayName(formats strfmt.Registry) error {

	if swag.IsZero(m.DisplayName) { // not required
		return nil
	}

	if err := validate.MinLength("displayName", "body", string(m.DisplayName), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("displayName", "body", string(m.DisplayName), 255); err != nil {
		return err
	}

	return nil
}

func (m *UpdateRouteTableDetails) validateRouteRules(formats strfmt.Registry) error {

	if swag.IsZero(m.RouteRules) { // not required
		return nil
	}

	for i := 0; i < len(m.RouteRules); i++ {

		if swag.IsZero(m.RouteRules[i]) { // not required
			continue
		}

		if m.RouteRules[i] != nil {

			if err := m.RouteRules[i].Validate(formats); err != nil {
				if ve, ok := err.(*errors.Validation); ok {
					return ve.ValidateName("routeRules" + "." + strconv.Itoa(i))
				}
				return err
			}
		}

	}

	return nil
}
