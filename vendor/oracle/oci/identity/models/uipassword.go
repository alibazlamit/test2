package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"

	strfmt "github.com/go-openapi/strfmt"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Uipassword A text password that enables a user to sign in to the Console, the user interface for interacting with Oracle Bare
// Metal Cloud Services.
//
// For more information about user credentials, see [User Credentials](/Content/Identity/Concepts/usercredentials.htm).
//
// swagger:model UIPassword
type Uipassword struct {

	// The detailed status of INACTIVE lifecycleState.
	InactiveStatus int64 `json:"inactiveStatus,omitempty"`

	// The password's current state. After creating a password, make sure its `lifecycleState` changes from
	// CREATING to ACTIVE before using it.
	//
	// Max Length: 64
	// Min Length: 1
	LifecycleState string `json:"lifecycleState,omitempty"`

	// The user's password for the Console.
	Password string `json:"password,omitempty"`

	// Date and time the password was created, in the format defined by RFC3339.
	//
	// Example: `2016-08-25T21:10:29.600Z`
	//
	TimeCreated strfmt.DateTime `json:"timeCreated,omitempty"`

	// The OCID of the user.
	UserID string `json:"userId,omitempty"`
}

// Validate validates this uipassword
func (m *Uipassword) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateLifecycleState(formats); err != nil {
		// prop
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

var uipasswordTypeLifecycleStatePropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["CREATING","ACTIVE","INACTIVE","DELETING","DELETED"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		uipasswordTypeLifecycleStatePropEnum = append(uipasswordTypeLifecycleStatePropEnum, v)
	}
}

const (
	// UipasswordLifecycleStateCREATING captures enum value "CREATING"
	UipasswordLifecycleStateCREATING string = "CREATING"
	// UipasswordLifecycleStateACTIVE captures enum value "ACTIVE"
	UipasswordLifecycleStateACTIVE string = "ACTIVE"
	// UipasswordLifecycleStateINACTIVE captures enum value "INACTIVE"
	UipasswordLifecycleStateINACTIVE string = "INACTIVE"
	// UipasswordLifecycleStateDELETING captures enum value "DELETING"
	UipasswordLifecycleStateDELETING string = "DELETING"
	// UipasswordLifecycleStateDELETED captures enum value "DELETED"
	UipasswordLifecycleStateDELETED string = "DELETED"
)

// prop value enum
func (m *Uipassword) validateLifecycleStateEnum(path, location string, value string) error {
	if err := validate.Enum(path, location, value, uipasswordTypeLifecycleStatePropEnum); err != nil {
		return err
	}
	return nil
}

func (m *Uipassword) validateLifecycleState(formats strfmt.Registry) error {

	if swag.IsZero(m.LifecycleState) { // not required
		return nil
	}

	if err := validate.MinLength("lifecycleState", "body", string(m.LifecycleState), 1); err != nil {
		return err
	}

	if err := validate.MaxLength("lifecycleState", "body", string(m.LifecycleState), 64); err != nil {
		return err
	}

	// value enum
	if err := m.validateLifecycleStateEnum("lifecycleState", "body", m.LifecycleState); err != nil {
		return err
	}

	return nil
}
