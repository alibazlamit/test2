package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListCompartmentsReader is a Reader for the ListCompartments structure.
type ListCompartmentsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListCompartmentsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListCompartmentsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListCompartmentsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListCompartmentsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListCompartmentsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListCompartmentsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListCompartmentsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListCompartmentsOK creates a ListCompartmentsOK with default headers values
func NewListCompartmentsOK() *ListCompartmentsOK {
	return &ListCompartmentsOK{}
}

/*ListCompartmentsOK handles this case with default header values.

The list is being retrieved.
*/
type ListCompartmentsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.Compartment
}

func (o *ListCompartmentsOK) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] listCompartmentsOK  %+v", 200, o.Payload)
}

func (o *ListCompartmentsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompartmentsBadRequest creates a ListCompartmentsBadRequest with default headers values
func NewListCompartmentsBadRequest() *ListCompartmentsBadRequest {
	return &ListCompartmentsBadRequest{}
}

/*ListCompartmentsBadRequest handles this case with default header values.

Bad Request
*/
type ListCompartmentsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListCompartmentsBadRequest) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] listCompartmentsBadRequest  %+v", 400, o.Payload)
}

func (o *ListCompartmentsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompartmentsForbidden creates a ListCompartmentsForbidden with default headers values
func NewListCompartmentsForbidden() *ListCompartmentsForbidden {
	return &ListCompartmentsForbidden{}
}

/*ListCompartmentsForbidden handles this case with default header values.

Forbidden
*/
type ListCompartmentsForbidden struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListCompartmentsForbidden) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] listCompartmentsForbidden  %+v", 403, o.Payload)
}

func (o *ListCompartmentsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompartmentsNotFound creates a ListCompartmentsNotFound with default headers values
func NewListCompartmentsNotFound() *ListCompartmentsNotFound {
	return &ListCompartmentsNotFound{}
}

/*ListCompartmentsNotFound handles this case with default header values.

Not Found
*/
type ListCompartmentsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListCompartmentsNotFound) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] listCompartmentsNotFound  %+v", 404, o.Payload)
}

func (o *ListCompartmentsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompartmentsInternalServerError creates a ListCompartmentsInternalServerError with default headers values
func NewListCompartmentsInternalServerError() *ListCompartmentsInternalServerError {
	return &ListCompartmentsInternalServerError{}
}

/*ListCompartmentsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListCompartmentsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListCompartmentsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] listCompartmentsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListCompartmentsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListCompartmentsDefault creates a ListCompartmentsDefault with default headers values
func NewListCompartmentsDefault(code int) *ListCompartmentsDefault {
	return &ListCompartmentsDefault{
		_statusCode: code,
	}
}

/*ListCompartmentsDefault handles this case with default header values.

An error has occurred.

*/
type ListCompartmentsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list compartments default response
func (o *ListCompartmentsDefault) Code() int {
	return o._statusCode
}

func (o *ListCompartmentsDefault) Error() string {
	return fmt.Sprintf("[GET /compartments/][%d] ListCompartments default  %+v", o._statusCode, o.Payload)
}

func (o *ListCompartmentsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
