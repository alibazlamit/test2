package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// GetUserGroupMembershipReader is a Reader for the GetUserGroupMembership structure.
type GetUserGroupMembershipReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetUserGroupMembershipReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetUserGroupMembershipOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetUserGroupMembershipBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetUserGroupMembershipForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetUserGroupMembershipNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewGetUserGroupMembershipInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewGetUserGroupMembershipDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewGetUserGroupMembershipOK creates a GetUserGroupMembershipOK with default headers values
func NewGetUserGroupMembershipOK() *GetUserGroupMembershipOK {
	return &GetUserGroupMembershipOK{}
}

/*GetUserGroupMembershipOK handles this case with default header values.

The membership was retrieved.
*/
type GetUserGroupMembershipOK struct {
	/*For optimistic concurrency control. See `if-match`.
	 */
	Etag string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.UserGroupMembership
}

func (o *GetUserGroupMembershipOK) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] getUserGroupMembershipOK  %+v", 200, o.Payload)
}

func (o *GetUserGroupMembershipOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header etag
	o.Etag = response.GetHeader("etag")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.UserGroupMembership)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupMembershipBadRequest creates a GetUserGroupMembershipBadRequest with default headers values
func NewGetUserGroupMembershipBadRequest() *GetUserGroupMembershipBadRequest {
	return &GetUserGroupMembershipBadRequest{}
}

/*GetUserGroupMembershipBadRequest handles this case with default header values.

Bad Request
*/
type GetUserGroupMembershipBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetUserGroupMembershipBadRequest) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] getUserGroupMembershipBadRequest  %+v", 400, o.Payload)
}

func (o *GetUserGroupMembershipBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupMembershipForbidden creates a GetUserGroupMembershipForbidden with default headers values
func NewGetUserGroupMembershipForbidden() *GetUserGroupMembershipForbidden {
	return &GetUserGroupMembershipForbidden{}
}

/*GetUserGroupMembershipForbidden handles this case with default header values.

Forbidden
*/
type GetUserGroupMembershipForbidden struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetUserGroupMembershipForbidden) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] getUserGroupMembershipForbidden  %+v", 403, o.Payload)
}

func (o *GetUserGroupMembershipForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupMembershipNotFound creates a GetUserGroupMembershipNotFound with default headers values
func NewGetUserGroupMembershipNotFound() *GetUserGroupMembershipNotFound {
	return &GetUserGroupMembershipNotFound{}
}

/*GetUserGroupMembershipNotFound handles this case with default header values.

Not Found
*/
type GetUserGroupMembershipNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetUserGroupMembershipNotFound) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] getUserGroupMembershipNotFound  %+v", 404, o.Payload)
}

func (o *GetUserGroupMembershipNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupMembershipInternalServerError creates a GetUserGroupMembershipInternalServerError with default headers values
func NewGetUserGroupMembershipInternalServerError() *GetUserGroupMembershipInternalServerError {
	return &GetUserGroupMembershipInternalServerError{}
}

/*GetUserGroupMembershipInternalServerError handles this case with default header values.

Internal Server Error
*/
type GetUserGroupMembershipInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *GetUserGroupMembershipInternalServerError) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] getUserGroupMembershipInternalServerError  %+v", 500, o.Payload)
}

func (o *GetUserGroupMembershipInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetUserGroupMembershipDefault creates a GetUserGroupMembershipDefault with default headers values
func NewGetUserGroupMembershipDefault(code int) *GetUserGroupMembershipDefault {
	return &GetUserGroupMembershipDefault{
		_statusCode: code,
	}
}

/*GetUserGroupMembershipDefault handles this case with default header values.

An error has occurred.

*/
type GetUserGroupMembershipDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the get user group membership default response
func (o *GetUserGroupMembershipDefault) Code() int {
	return o._statusCode
}

func (o *GetUserGroupMembershipDefault) Error() string {
	return fmt.Sprintf("[GET /userGroupMemberships/{userGroupMembershipId}][%d] GetUserGroupMembership default  %+v", o._statusCode, o.Payload)
}

func (o *GetUserGroupMembershipDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
