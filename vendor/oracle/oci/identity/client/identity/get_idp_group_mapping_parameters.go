package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewGetIdpGroupMappingParams creates a new GetIdpGroupMappingParams object
// with the default values initialized.
func NewGetIdpGroupMappingParams() *GetIdpGroupMappingParams {
	var ()
	return &GetIdpGroupMappingParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewGetIdpGroupMappingParamsWithTimeout creates a new GetIdpGroupMappingParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewGetIdpGroupMappingParamsWithTimeout(timeout time.Duration) *GetIdpGroupMappingParams {
	var ()
	return &GetIdpGroupMappingParams{

		timeout: timeout,
	}
}

// NewGetIdpGroupMappingParamsWithContext creates a new GetIdpGroupMappingParams object
// with the default values initialized, and the ability to set a context for a request
func NewGetIdpGroupMappingParamsWithContext(ctx context.Context) *GetIdpGroupMappingParams {
	var ()
	return &GetIdpGroupMappingParams{

		Context: ctx,
	}
}

// NewGetIdpGroupMappingParamsWithHTTPClient creates a new GetIdpGroupMappingParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewGetIdpGroupMappingParamsWithHTTPClient(client *http.Client) *GetIdpGroupMappingParams {
	var ()
	return &GetIdpGroupMappingParams{
		HTTPClient: client,
	}
}

/*GetIdpGroupMappingParams contains all the parameters to send to the API endpoint
for the get idp group mapping operation typically these are written to a http.Request
*/
type GetIdpGroupMappingParams struct {

	/*IdentityProviderID
	  The OCID of the identity provider.

	*/
	IdentityProviderID string
	/*MappingID
	  The OCID of the group mapping.

	*/
	MappingID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the get idp group mapping params
func (o *GetIdpGroupMappingParams) WithTimeout(timeout time.Duration) *GetIdpGroupMappingParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the get idp group mapping params
func (o *GetIdpGroupMappingParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the get idp group mapping params
func (o *GetIdpGroupMappingParams) WithContext(ctx context.Context) *GetIdpGroupMappingParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the get idp group mapping params
func (o *GetIdpGroupMappingParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the get idp group mapping params
func (o *GetIdpGroupMappingParams) WithHTTPClient(client *http.Client) *GetIdpGroupMappingParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the get idp group mapping params
func (o *GetIdpGroupMappingParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithIdentityProviderID adds the identityProviderID to the get idp group mapping params
func (o *GetIdpGroupMappingParams) WithIdentityProviderID(identityProviderID string) *GetIdpGroupMappingParams {
	o.SetIdentityProviderID(identityProviderID)
	return o
}

// SetIdentityProviderID adds the identityProviderId to the get idp group mapping params
func (o *GetIdpGroupMappingParams) SetIdentityProviderID(identityProviderID string) {
	o.IdentityProviderID = identityProviderID
}

// WithMappingID adds the mappingID to the get idp group mapping params
func (o *GetIdpGroupMappingParams) WithMappingID(mappingID string) *GetIdpGroupMappingParams {
	o.SetMappingID(mappingID)
	return o
}

// SetMappingID adds the mappingId to the get idp group mapping params
func (o *GetIdpGroupMappingParams) SetMappingID(mappingID string) {
	o.MappingID = mappingID
}

// WriteToRequest writes these params to a swagger request
func (o *GetIdpGroupMappingParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param identityProviderId
	if err := r.SetPathParam("identityProviderId", o.IdentityProviderID); err != nil {
		return err
	}

	// path param mappingId
	if err := r.SetPathParam("mappingId", o.MappingID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
