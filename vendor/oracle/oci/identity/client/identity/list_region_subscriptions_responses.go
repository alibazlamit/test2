package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListRegionSubscriptionsReader is a Reader for the ListRegionSubscriptions structure.
type ListRegionSubscriptionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRegionSubscriptionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRegionSubscriptionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListRegionSubscriptionsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewListRegionSubscriptionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRegionSubscriptionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListRegionSubscriptionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListRegionSubscriptionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRegionSubscriptionsOK creates a ListRegionSubscriptionsOK with default headers values
func NewListRegionSubscriptionsOK() *ListRegionSubscriptionsOK {
	return &ListRegionSubscriptionsOK{}
}

/*ListRegionSubscriptionsOK handles this case with default header values.

All the subscribed regions for the tenancy were retrieved.
*/
type ListRegionSubscriptionsOK struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.RegionSubscription
}

func (o *ListRegionSubscriptionsOK) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] listRegionSubscriptionsOK  %+v", 200, o.Payload)
}

func (o *ListRegionSubscriptionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionSubscriptionsBadRequest creates a ListRegionSubscriptionsBadRequest with default headers values
func NewListRegionSubscriptionsBadRequest() *ListRegionSubscriptionsBadRequest {
	return &ListRegionSubscriptionsBadRequest{}
}

/*ListRegionSubscriptionsBadRequest handles this case with default header values.

Bad Request
*/
type ListRegionSubscriptionsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionSubscriptionsBadRequest) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] listRegionSubscriptionsBadRequest  %+v", 400, o.Payload)
}

func (o *ListRegionSubscriptionsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionSubscriptionsUnauthorized creates a ListRegionSubscriptionsUnauthorized with default headers values
func NewListRegionSubscriptionsUnauthorized() *ListRegionSubscriptionsUnauthorized {
	return &ListRegionSubscriptionsUnauthorized{}
}

/*ListRegionSubscriptionsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListRegionSubscriptionsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionSubscriptionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] listRegionSubscriptionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRegionSubscriptionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionSubscriptionsNotFound creates a ListRegionSubscriptionsNotFound with default headers values
func NewListRegionSubscriptionsNotFound() *ListRegionSubscriptionsNotFound {
	return &ListRegionSubscriptionsNotFound{}
}

/*ListRegionSubscriptionsNotFound handles this case with default header values.

Not Found
*/
type ListRegionSubscriptionsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionSubscriptionsNotFound) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] listRegionSubscriptionsNotFound  %+v", 404, o.Payload)
}

func (o *ListRegionSubscriptionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionSubscriptionsInternalServerError creates a ListRegionSubscriptionsInternalServerError with default headers values
func NewListRegionSubscriptionsInternalServerError() *ListRegionSubscriptionsInternalServerError {
	return &ListRegionSubscriptionsInternalServerError{}
}

/*ListRegionSubscriptionsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListRegionSubscriptionsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionSubscriptionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] listRegionSubscriptionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRegionSubscriptionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionSubscriptionsDefault creates a ListRegionSubscriptionsDefault with default headers values
func NewListRegionSubscriptionsDefault(code int) *ListRegionSubscriptionsDefault {
	return &ListRegionSubscriptionsDefault{
		_statusCode: code,
	}
}

/*ListRegionSubscriptionsDefault handles this case with default header values.

An error has occurred.

*/
type ListRegionSubscriptionsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list region subscriptions default response
func (o *ListRegionSubscriptionsDefault) Code() int {
	return o._statusCode
}

func (o *ListRegionSubscriptionsDefault) Error() string {
	return fmt.Sprintf("[GET /tenancies/{tenancyId}/regionSubscriptions][%d] ListRegionSubscriptions default  %+v", o._statusCode, o.Payload)
}

func (o *ListRegionSubscriptionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
