package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"
	"time"

	"golang.org/x/net/context"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewListAPIKeysParams creates a new ListAPIKeysParams object
// with the default values initialized.
func NewListAPIKeysParams() *ListAPIKeysParams {
	var ()
	return &ListAPIKeysParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewListAPIKeysParamsWithTimeout creates a new ListAPIKeysParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewListAPIKeysParamsWithTimeout(timeout time.Duration) *ListAPIKeysParams {
	var ()
	return &ListAPIKeysParams{

		timeout: timeout,
	}
}

// NewListAPIKeysParamsWithContext creates a new ListAPIKeysParams object
// with the default values initialized, and the ability to set a context for a request
func NewListAPIKeysParamsWithContext(ctx context.Context) *ListAPIKeysParams {
	var ()
	return &ListAPIKeysParams{

		Context: ctx,
	}
}

// NewListAPIKeysParamsWithHTTPClient creates a new ListAPIKeysParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewListAPIKeysParamsWithHTTPClient(client *http.Client) *ListAPIKeysParams {
	var ()
	return &ListAPIKeysParams{
		HTTPClient: client,
	}
}

/*ListAPIKeysParams contains all the parameters to send to the API endpoint
for the list Api keys operation typically these are written to a http.Request
*/
type ListAPIKeysParams struct {

	/*UserID
	  The OCID of the user.

	*/
	UserID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the list Api keys params
func (o *ListAPIKeysParams) WithTimeout(timeout time.Duration) *ListAPIKeysParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the list Api keys params
func (o *ListAPIKeysParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the list Api keys params
func (o *ListAPIKeysParams) WithContext(ctx context.Context) *ListAPIKeysParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the list Api keys params
func (o *ListAPIKeysParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the list Api keys params
func (o *ListAPIKeysParams) WithHTTPClient(client *http.Client) *ListAPIKeysParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the list Api keys params
func (o *ListAPIKeysParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithUserID adds the userID to the list Api keys params
func (o *ListAPIKeysParams) WithUserID(userID string) *ListAPIKeysParams {
	o.SetUserID(userID)
	return o
}

// SetUserID adds the userId to the list Api keys params
func (o *ListAPIKeysParams) SetUserID(userID string) {
	o.UserID = userID
}

// WriteToRequest writes these params to a swagger request
func (o *ListAPIKeysParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param userId
	if err := r.SetPathParam("userId", o.UserID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
