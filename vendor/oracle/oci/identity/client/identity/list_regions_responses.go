package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListRegionsReader is a Reader for the ListRegions structure.
type ListRegionsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListRegionsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListRegionsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 401:
		result := NewListRegionsUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListRegionsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListRegionsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListRegionsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListRegionsOK creates a ListRegionsOK with default headers values
func NewListRegionsOK() *ListRegionsOK {
	return &ListRegionsOK{}
}

/*ListRegionsOK handles this case with default header values.

list all the regions.
*/
type ListRegionsOK struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.Region
}

func (o *ListRegionsOK) Error() string {
	return fmt.Sprintf("[GET /regions][%d] listRegionsOK  %+v", 200, o.Payload)
}

func (o *ListRegionsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionsUnauthorized creates a ListRegionsUnauthorized with default headers values
func NewListRegionsUnauthorized() *ListRegionsUnauthorized {
	return &ListRegionsUnauthorized{}
}

/*ListRegionsUnauthorized handles this case with default header values.

Unauthorized
*/
type ListRegionsUnauthorized struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionsUnauthorized) Error() string {
	return fmt.Sprintf("[GET /regions][%d] listRegionsUnauthorized  %+v", 401, o.Payload)
}

func (o *ListRegionsUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionsNotFound creates a ListRegionsNotFound with default headers values
func NewListRegionsNotFound() *ListRegionsNotFound {
	return &ListRegionsNotFound{}
}

/*ListRegionsNotFound handles this case with default header values.

Not Found
*/
type ListRegionsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionsNotFound) Error() string {
	return fmt.Sprintf("[GET /regions][%d] listRegionsNotFound  %+v", 404, o.Payload)
}

func (o *ListRegionsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionsInternalServerError creates a ListRegionsInternalServerError with default headers values
func NewListRegionsInternalServerError() *ListRegionsInternalServerError {
	return &ListRegionsInternalServerError{}
}

/*ListRegionsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListRegionsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListRegionsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /regions][%d] listRegionsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListRegionsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListRegionsDefault creates a ListRegionsDefault with default headers values
func NewListRegionsDefault(code int) *ListRegionsDefault {
	return &ListRegionsDefault{
		_statusCode: code,
	}
}

/*ListRegionsDefault handles this case with default header values.

An error has occurred.

*/
type ListRegionsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list regions default response
func (o *ListRegionsDefault) Code() int {
	return o._statusCode
}

func (o *ListRegionsDefault) Error() string {
	return fmt.Sprintf("[GET /regions][%d] ListRegions default  %+v", o._statusCode, o.Payload)
}

func (o *ListRegionsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
