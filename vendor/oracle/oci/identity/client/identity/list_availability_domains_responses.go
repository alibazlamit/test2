package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListAvailabilityDomainsReader is a Reader for the ListAvailabilityDomains structure.
type ListAvailabilityDomainsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListAvailabilityDomainsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListAvailabilityDomainsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListAvailabilityDomainsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListAvailabilityDomainsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListAvailabilityDomainsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListAvailabilityDomainsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListAvailabilityDomainsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListAvailabilityDomainsOK creates a ListAvailabilityDomainsOK with default headers values
func NewListAvailabilityDomainsOK() *ListAvailabilityDomainsOK {
	return &ListAvailabilityDomainsOK{}
}

/*ListAvailabilityDomainsOK handles this case with default header values.

The list is being retrieved.
*/
type ListAvailabilityDomainsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.AvailabilityDomain
}

func (o *ListAvailabilityDomainsOK) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] listAvailabilityDomainsOK  %+v", 200, o.Payload)
}

func (o *ListAvailabilityDomainsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailabilityDomainsBadRequest creates a ListAvailabilityDomainsBadRequest with default headers values
func NewListAvailabilityDomainsBadRequest() *ListAvailabilityDomainsBadRequest {
	return &ListAvailabilityDomainsBadRequest{}
}

/*ListAvailabilityDomainsBadRequest handles this case with default header values.

Bad Request
*/
type ListAvailabilityDomainsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListAvailabilityDomainsBadRequest) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] listAvailabilityDomainsBadRequest  %+v", 400, o.Payload)
}

func (o *ListAvailabilityDomainsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailabilityDomainsForbidden creates a ListAvailabilityDomainsForbidden with default headers values
func NewListAvailabilityDomainsForbidden() *ListAvailabilityDomainsForbidden {
	return &ListAvailabilityDomainsForbidden{}
}

/*ListAvailabilityDomainsForbidden handles this case with default header values.

Forbidden
*/
type ListAvailabilityDomainsForbidden struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListAvailabilityDomainsForbidden) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] listAvailabilityDomainsForbidden  %+v", 403, o.Payload)
}

func (o *ListAvailabilityDomainsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailabilityDomainsNotFound creates a ListAvailabilityDomainsNotFound with default headers values
func NewListAvailabilityDomainsNotFound() *ListAvailabilityDomainsNotFound {
	return &ListAvailabilityDomainsNotFound{}
}

/*ListAvailabilityDomainsNotFound handles this case with default header values.

Not Found
*/
type ListAvailabilityDomainsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListAvailabilityDomainsNotFound) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] listAvailabilityDomainsNotFound  %+v", 404, o.Payload)
}

func (o *ListAvailabilityDomainsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailabilityDomainsInternalServerError creates a ListAvailabilityDomainsInternalServerError with default headers values
func NewListAvailabilityDomainsInternalServerError() *ListAvailabilityDomainsInternalServerError {
	return &ListAvailabilityDomainsInternalServerError{}
}

/*ListAvailabilityDomainsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListAvailabilityDomainsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListAvailabilityDomainsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] listAvailabilityDomainsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListAvailabilityDomainsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListAvailabilityDomainsDefault creates a ListAvailabilityDomainsDefault with default headers values
func NewListAvailabilityDomainsDefault(code int) *ListAvailabilityDomainsDefault {
	return &ListAvailabilityDomainsDefault{
		_statusCode: code,
	}
}

/*ListAvailabilityDomainsDefault handles this case with default header values.

An error has occurred.

*/
type ListAvailabilityDomainsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list availability domains default response
func (o *ListAvailabilityDomainsDefault) Code() int {
	return o._statusCode
}

func (o *ListAvailabilityDomainsDefault) Error() string {
	return fmt.Sprintf("[GET /availabilityDomains/][%d] ListAvailabilityDomains default  %+v", o._statusCode, o.Payload)
}

func (o *ListAvailabilityDomainsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
