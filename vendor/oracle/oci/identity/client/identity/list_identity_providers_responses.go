package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListIdentityProvidersReader is a Reader for the ListIdentityProviders structure.
type ListIdentityProvidersReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIdentityProvidersReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIdentityProvidersOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIdentityProvidersBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIdentityProvidersForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIdentityProvidersNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIdentityProvidersInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListIdentityProvidersDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListIdentityProvidersOK creates a ListIdentityProvidersOK with default headers values
func NewListIdentityProvidersOK() *ListIdentityProvidersOK {
	return &ListIdentityProvidersOK{}
}

/*ListIdentityProvidersOK handles this case with default header values.

The list is being retrieved.
*/
type ListIdentityProvidersOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []models.IdentityProvider
}

func (o *ListIdentityProvidersOK) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] listIdentityProvidersOK  %+v", 200, o.Payload)
}

func (o *ListIdentityProvidersOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload as interface type
	payload, err := models.UnmarshalIdentityProviderSlice(response.Body(), consumer)
	if err != nil {
		return err
	}
	o.Payload = payload

	return nil
}

// NewListIdentityProvidersBadRequest creates a ListIdentityProvidersBadRequest with default headers values
func NewListIdentityProvidersBadRequest() *ListIdentityProvidersBadRequest {
	return &ListIdentityProvidersBadRequest{}
}

/*ListIdentityProvidersBadRequest handles this case with default header values.

Bad Request
*/
type ListIdentityProvidersBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdentityProvidersBadRequest) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] listIdentityProvidersBadRequest  %+v", 400, o.Payload)
}

func (o *ListIdentityProvidersBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityProvidersForbidden creates a ListIdentityProvidersForbidden with default headers values
func NewListIdentityProvidersForbidden() *ListIdentityProvidersForbidden {
	return &ListIdentityProvidersForbidden{}
}

/*ListIdentityProvidersForbidden handles this case with default header values.

Forbidden
*/
type ListIdentityProvidersForbidden struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdentityProvidersForbidden) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] listIdentityProvidersForbidden  %+v", 403, o.Payload)
}

func (o *ListIdentityProvidersForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityProvidersNotFound creates a ListIdentityProvidersNotFound with default headers values
func NewListIdentityProvidersNotFound() *ListIdentityProvidersNotFound {
	return &ListIdentityProvidersNotFound{}
}

/*ListIdentityProvidersNotFound handles this case with default header values.

Not Found
*/
type ListIdentityProvidersNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdentityProvidersNotFound) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] listIdentityProvidersNotFound  %+v", 404, o.Payload)
}

func (o *ListIdentityProvidersNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityProvidersInternalServerError creates a ListIdentityProvidersInternalServerError with default headers values
func NewListIdentityProvidersInternalServerError() *ListIdentityProvidersInternalServerError {
	return &ListIdentityProvidersInternalServerError{}
}

/*ListIdentityProvidersInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIdentityProvidersInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdentityProvidersInternalServerError) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] listIdentityProvidersInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIdentityProvidersInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdentityProvidersDefault creates a ListIdentityProvidersDefault with default headers values
func NewListIdentityProvidersDefault(code int) *ListIdentityProvidersDefault {
	return &ListIdentityProvidersDefault{
		_statusCode: code,
	}
}

/*ListIdentityProvidersDefault handles this case with default header values.

An error has occurred.

*/
type ListIdentityProvidersDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list identity providers default response
func (o *ListIdentityProvidersDefault) Code() int {
	return o._statusCode
}

func (o *ListIdentityProvidersDefault) Error() string {
	return fmt.Sprintf("[GET /identityProviders/][%d] ListIdentityProviders default  %+v", o._statusCode, o.Payload)
}

func (o *ListIdentityProvidersDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
