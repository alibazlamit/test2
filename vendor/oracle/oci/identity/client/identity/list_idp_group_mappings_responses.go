package identity

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	"oracle/oci/identity/models"
)

// ListIdpGroupMappingsReader is a Reader for the ListIdpGroupMappings structure.
type ListIdpGroupMappingsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListIdpGroupMappingsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewListIdpGroupMappingsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewListIdpGroupMappingsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewListIdpGroupMappingsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewListIdpGroupMappingsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 500:
		result := NewListIdpGroupMappingsInternalServerError()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		result := NewListIdpGroupMappingsDefault(response.Code())
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		if response.Code()/100 == 2 {
			return result, nil
		}
		return nil, result
	}
}

// NewListIdpGroupMappingsOK creates a ListIdpGroupMappingsOK with default headers values
func NewListIdpGroupMappingsOK() *ListIdpGroupMappingsOK {
	return &ListIdpGroupMappingsOK{}
}

/*ListIdpGroupMappingsOK handles this case with default header values.

The list is being retrieved.
*/
type ListIdpGroupMappingsOK struct {
	/*For pagination of a list of items. When paging through a list, if this header appears in the response,
	then a partial list might have been returned. Include this value as the `page` parameter for the
	subsequent GET request to get the next batch of items.

	*/
	OpcNextPage string
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload []*models.IdpGroupMapping
}

func (o *ListIdpGroupMappingsOK) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] listIdpGroupMappingsOK  %+v", 200, o.Payload)
}

func (o *ListIdpGroupMappingsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-next-page
	o.OpcNextPage = response.GetHeader("opc-next-page")

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdpGroupMappingsBadRequest creates a ListIdpGroupMappingsBadRequest with default headers values
func NewListIdpGroupMappingsBadRequest() *ListIdpGroupMappingsBadRequest {
	return &ListIdpGroupMappingsBadRequest{}
}

/*ListIdpGroupMappingsBadRequest handles this case with default header values.

Bad Request
*/
type ListIdpGroupMappingsBadRequest struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdpGroupMappingsBadRequest) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] listIdpGroupMappingsBadRequest  %+v", 400, o.Payload)
}

func (o *ListIdpGroupMappingsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdpGroupMappingsForbidden creates a ListIdpGroupMappingsForbidden with default headers values
func NewListIdpGroupMappingsForbidden() *ListIdpGroupMappingsForbidden {
	return &ListIdpGroupMappingsForbidden{}
}

/*ListIdpGroupMappingsForbidden handles this case with default header values.

Forbidden
*/
type ListIdpGroupMappingsForbidden struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdpGroupMappingsForbidden) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] listIdpGroupMappingsForbidden  %+v", 403, o.Payload)
}

func (o *ListIdpGroupMappingsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdpGroupMappingsNotFound creates a ListIdpGroupMappingsNotFound with default headers values
func NewListIdpGroupMappingsNotFound() *ListIdpGroupMappingsNotFound {
	return &ListIdpGroupMappingsNotFound{}
}

/*ListIdpGroupMappingsNotFound handles this case with default header values.

Not Found
*/
type ListIdpGroupMappingsNotFound struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdpGroupMappingsNotFound) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] listIdpGroupMappingsNotFound  %+v", 404, o.Payload)
}

func (o *ListIdpGroupMappingsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdpGroupMappingsInternalServerError creates a ListIdpGroupMappingsInternalServerError with default headers values
func NewListIdpGroupMappingsInternalServerError() *ListIdpGroupMappingsInternalServerError {
	return &ListIdpGroupMappingsInternalServerError{}
}

/*ListIdpGroupMappingsInternalServerError handles this case with default header values.

Internal Server Error
*/
type ListIdpGroupMappingsInternalServerError struct {
	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

func (o *ListIdpGroupMappingsInternalServerError) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] listIdpGroupMappingsInternalServerError  %+v", 500, o.Payload)
}

func (o *ListIdpGroupMappingsInternalServerError) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListIdpGroupMappingsDefault creates a ListIdpGroupMappingsDefault with default headers values
func NewListIdpGroupMappingsDefault(code int) *ListIdpGroupMappingsDefault {
	return &ListIdpGroupMappingsDefault{
		_statusCode: code,
	}
}

/*ListIdpGroupMappingsDefault handles this case with default header values.

An error has occurred.

*/
type ListIdpGroupMappingsDefault struct {
	_statusCode int

	/*Unique Oracle-assigned identifier for the request. If you need to contact Oracle about a
	particular request, please provide the request ID.

	*/
	OpcRequestID string

	Payload *models.Error
}

// Code gets the status code for the list idp group mappings default response
func (o *ListIdpGroupMappingsDefault) Code() int {
	return o._statusCode
}

func (o *ListIdpGroupMappingsDefault) Error() string {
	return fmt.Sprintf("[GET /identityProviders/{identityProviderId}/groupMappings/][%d] ListIdpGroupMappings default  %+v", o._statusCode, o.Payload)
}

func (o *ListIdpGroupMappingsDefault) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response header opc-request-id
	o.OpcRequestID = response.GetHeader("opc-request-id")

	o.Payload = new(models.Error)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
